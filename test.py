x = [0, 50, 100, 150, 200, 250, 300, 350, 400, 450, 500, 550, 600, 650, 700,
750, 800, 850, 900, 950, 1000, 1050, 1100, 1150, 1200, 1250, 1300, 1350, 1400, 1450,
1500, 1550, 1600, 1650, 1700, 1750, 1800, 1850, 1900, 1950, 2000, 2050, 2100, 2150, 2200,
2250, 2300, 2350, 2400, 2450, 2500, 2550, 2600, 2650, 2700, 2750, 2800, 2850, 2900, 2950,
3000, 3050, 3100, 3150, 3200, 3250, 3300, 3350, 3400, 3450, 3500, 3550, 3600, 3650, 3700,
3750, 3800, 3850, 3900, 3950, 4000, 4050, 4100, 4150, 4200, 4250, 4300, 4350, 4400, 4450,
4500, 4550, 4600, 4650, 4700, 4750, 4800, 4850, 4900, 4950, 5000, 5050, 5100, 5150, 5200,
5250, 5300, 5350, 5400, 5450, 5500, 5550, 5600, 5650, 5700, 5750, 5800, 5850, 5900, 5950,
6000, 6050, 6100, 6150, 6200, 6250, 6300, 6350, 6400, 6450, 6500, 6550, 6600, 6650, 6700,
6750, 6800, 6850, 6900, 6950, 7000, 7050, 7100, 7150, 7200, 7250, 7300, 7350, 7400, 7450,
7500, 7550, 7600, 7650, 7700, 7750, 7800, 7850, 7900, 7950, 8000, 8050, 8100, 8150, 8200,
8250, 8300, 8350, 8400, 8450, 8500, 8550, 8600, 8650, 8700, 8750, 8800, 8850, 8900, 8950,
9000, 9050, 9100, 9150, 9200, 9250, 9300, 9350, 9400, 9450, 9500, 9550, 9600, 9650, 9700,
9750, 9800, 9850, 9900, 9950, 10000, 10050, 10100, 10150, 10200, 10250, 10300, 10350, 10400, 10450,
10500, 10550, 10600, 10650, 10700, 10750, 10800, 10850, 10900, 10950, 11000, 11050, 11100, 11150, 11200,
11250, 11300, 11350, 11400, 11450, 11500, 11550, 11600, 11650, 11700, 11750, 11800, 11850, 11900, 11950,
12000, 12050, 12100, 12150, 12200, 12250, 12300, 12350, 12400, 12450, 12500, 12550, 12600, 12650, 12700,
12750, 12800, 12850, 12900, 12950, 13000, 13050, 13100, 13150, 13200, 13250, 13300, 13350, 13400, 13450,
13500, 13550, 13600, 13650, 13700, 13750, 13800, 13850, 13900, 13950, 14000, 14050, 14100, 14150, 14200,
14250, 14300, 14350, 14400, 14450, 14500, 14550, 14600, 14650, 14700, 14750, 14800, 14850, 14900, 14950,
15000, 15050, 15100, 15150, 15200, 15250, 15300, 15350, 15400, 15450, 15500, 15550, 15600, 15650, 15700,
15750, 15800, 15850, 15900, 15950, 16000, 16050, 16100, 16150, 16200, 16250, 16300, 16350, 16400, 16450,
16500, 16550, 16600, 16650, 16700, 16750, 16800, 16850, 16900, 16950, 17000, 17050, 17100, 17150, 17200,
17250, 17300, 17350, 17400, 17450, 17500, 17550, 17600, 17650, 17700, 17750, 17800, 17850, 17900, 17950,
18000, 18050, 18100, 18150, 18200, 18250, 18300, 18350, 18400, 18450, 18500, 18550, 18600, 18650, 18700,
18750, 18800, 18850, 18900, 18950, 19000, 19050, 19100, 19150, 19200, 19250, 19300, 19350, 19400, 19450,
19500, 19550, 19600, 19650, 19700, 19750, 19800, 19850, 19900, 19950, 20000, 20050, 20100, 20150, 20200,
20250, 20300, 20350, 20400, 20450, 20500, 20550, 20600, 20650, 20700, 20750, 20800, 20850, 20900, 20950,
21000, 21050, 21100, 21150, 21200, 21250, 21300, 21350, 21400, 21450, 21500, 21550, 21600, 21650, 21700,
21750, 21800, 21850, 21900, 21950, 22000, 22050, 22100, 22150, 22200, 22250, 22300, 22350, 22400, 22450,
22500, 22550, 22600, 22650, 22700, 22750, 22800, 22850, 22900, 22950, 23000, 23050, 23100, 23150, 23200,
23250, 23300, 23350, 23400, 23450, 23500, 23550, 23600, 23650, 23700, 23750, 23800, 23850, 23900, 23950,
24000, 24050, 24100, 24150, 24200, 24250, 24300, 24350, 24400, 24450, 24500, 24550, 24600, 24650, 24700,
24750, 24800, 24850, 24900, 24950, 25000, 25050, 25100, 25150, 25200, 25250, 25300, 25350, 25400, 25450,
25500, 25550, 25600, 25650, 25700, 25750, 25800, 25850, 25900, 25950, 26000, 26050, 26100, 26150, 26200,
26250, 26300, 26350, 26400, 26450, 26500, 26550, 26600, 26650, 26700, 26750, 26800, 26850, 26900, 26950,
27000, 27050, 27100, 27150, 27200, 27250, 27300, 27350, 27400, 27450, 27500, 27550, 27600, 27650, 27700,
27750, 27800, 27850, 27900, 27950, 28000, 28050, 28100, 28150, 28200, 28250, 28300, 28350, 28400, 28450,
28500, 28550, 28600, 28650, 28700, 28750, 28800, 28850, 28900, 28950, 29000, 29050, 29100, 29150, 29200,
29250, 29300, 29350, 29400, 29450, 29500, 29550, 29600, 29650, 29700, 29750, 29800, 29850, 29900, 29950,
30000, 30050, 30100, 30150, 30200, 30250, 30300, 30350, 30400, 30450, 30500, 30550, 30600, 30650, 30700,
30750, 30800, 30850, 30900, 30950, 31000, 31050, 31100, 31150, 31200, 31250, 31300, 31350, 31400, 31450,
31500, 31550, 31600, 31650, 31700, 31750, 31800, 31850, 31900, 31950, 32000, 32050, 32100, 32150, 32200,
32250, 32300, 32350, 32400, 32450, 32500, 32550, 32600, 32650, 32700, 32750, 32800, 32850, 32900, 32950,
33000, 33050, 33100, 33150, 33200, 33250, 33300, 33350, 33400, 33450, 33500, 33550, 33600, 33650, 33700,
33750, 33800, 33850, 33900, 33950, 34000, 34050, 34100, 34150, 34200, 34250, 34300, 34350, 34400, 34450,
34500, 34550, 34600, 34650, 34700, 34750, 34800, 34850, 34900, 34950, 35000, 35050, 35100, 35150, 35200,
35250, 35300, 35350, 35400, 35450, 35500]


y = [0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
0.00000000, 0.00000000, 0.00000000, 7.21214639, 9.82258250, -3.69083578, -4.69781587,
 -0.66180611, 1.23766910, -4.58252817, 0.07311558, 2.48490145, 5.43437224, -9.78293705,
 3.29680949, 6.75226625, -7.66269009, 7.74875000, 3.81694623, 8.78177129, 6.35233528,
 4.53080324, -1.34452458, 6.02965054, 7.98139428, 6.67926147, 4.05514068, 8.80648922,
 -0.63011794, 1.52657488, -9.81752274, -5.49655875, 8.19436264, 7.44568639, 9.86168652,
 -0.08651916, 3.93180246, 0.52154724, -8.71883207, 8.39438995, -6.10001253, 9.75529183,
 9.92670560, -6.92706333, 8.96165999, 4.93027089, -9.13580578, -8.58771992, -3.42135536,
 8.73196104, 4.42064275, 7.57916113, 9.09712339, -2.85628986, -2.82560109, 8.07826502,
 7.24965728, 9.94206802, 4.04198681, 7.85087527, 6.52444292, 9.26920260, 9.58180267,
 -1.36674773, -0.26838704, -5.17715753, -3.75443077, 2.01380633, -6.20044464, -9.66941591,
 -1.73961680, -5.79601158, -1.66735325, -8.66888041, -2.78739498, 4.47093014, -2.92413659,
 -0.30757500, -3.71010879, 8.07357081, 7.68248122, -0.71314824, 6.55822941, 3.15377709,
 9.99918370, 4.67741071, 8.75489878, -7.37098651, 8.61709449, 2.66866303, -2.28335116,
 -4.67954095, -3.95830754, -8.32450362, 3.12300124, -8.12906892, 8.80432442, 0.14603542,
 2.06090795, -4.52894972, -7.05195100, 3.22995075, -9.51606868, -2.51336934, 7.60200523,
 -4.11586925, -1.98743717, 2.95910169, -6.08706770, -9.81621473, -8.25770719, 4.33810363,
 -1.65575163, 2.65961524, -2.84134381, -4.19754801, 5.66594698, 5.39492839, -3.53449936,
 -7.66821248, -0.61071285, -6.08463609, 8.99972804, 4.47278804, 8.59731329, 8.77236791,
 5.29255546, 2.20844986, 7.16593271, 5.50213555, 6.85705066, -5.17402209, -7.82134789,
 -1.18158993, 2.50752462, -9.57321884, -0.31222519, -2.83743259, -0.12170815, -6.96477265,
 -6.22855517, 5.11784453, 3.87246981, 5.40566348, -2.72202601, -2.56057350, -0.05223828,
 -5.20348277, -8.86972574, 1.06386082, 0.70617509, -5.99957617, -3.11162419, -4.82910066,
 6.66571741, -3.70064137, 4.07655251, -0.09765703, -4.58341636, 9.46292905, -0.86861938,
 3.80534595, 9.84440426, 9.19394798, -8.87852196, 4.61881973, -0.56629725, -3.09749475,
 -9.25263176, 8.93816704, -0.42963611, -4.64220726, 9.21486442, -9.92428422, 3.53661628,
 1.08580470, -7.99995374, 2.67267820, 6.72293004, -7.70211257, 2.89208424, 1.82802715,
 2.00425485, 4.30984823, 8.77164728, 3.61609784, -4.63353400, 1.85647576, 7.21258844,
 5.45073495, 1.30032258, 1.51454305, -3.36536257, -1.49383140, -6.12300670, 9.37714165,
 -4.69636777, 8.46171637, -0.44003894, 9.00396842, 0.65456965, 7.00090165, 4.68915595,
 4.78205932, 3.04243827, -3.34280204, 3.72715469, -8.91696360, 0.60990667, 3.15841374,
 3.37162343, -0.50744744, -5.79686815, 2.46426317, 9.84372645, 4.91529639, 5.28804251,
 -8.13808601, -2.38378621, 3.14292895, -4.75677771, 6.32989454, 2.52401744, 7.90248373,
 8.05558646, -7.76790361, 8.31464106, -3.10930651, 2.98920597, -4.81836749, 7.38720648,
 -2.61176576, 6.07982753, -4.03289762, 1.62623062, -1.85298720, 7.30506946, -5.23291755,
 6.78005541, 5.84574315, -1.59057535, 9.62971447, -2.59249448, 0.54156351, -5.53956795,
 -2.88087019, 9.40815501, 5.53676144, 9.90388452, 6.50502871, 1.75169304, -9.09044523,
 -6.19973679, 3.35282311, 4.81878084, 6.40995549, 1.18268245, 3.21502169, -3.43438144,
 -1.66678926, 9.47078986, 6.08590753, -2.66879943, -6.12455458, 7.17580710, 4.92525903,
 2.82015424, 7.27332168, 3.75577168, -1.25491764, 1.96565239, 3.51192042, 2.05912087,
 2.81382623, -1.49152264, -5.30469591, -4.88526164, -0.83879842, 0.05629507, -6.08480998,
 -9.22431561, -0.97929290, -1.99657163, 4.11872494, 4.37622196, 1.75988142, -4.17409595,
 -3.65458735, -3.57619842, -5.42310954, -1.69652774, 8.29692449, 5.49192262, -6.22785568,
 3.15019079, -9.32258775, 6.97690507, 7.20159036, 8.32297359, -0.31717290, -6.25578026,
 2.13482206, -0.91492211, -4.59213326, -6.36480283, 5.90579832, 3.79470237, -5.44935670,
 2.71840235, -3.68281139, 5.78126766, 7.03678598, -3.84060440, -4.53181439, 3.82498385,
 -8.41869092, -5.49764929, -6.67080235, 7.07350176, 6.29659201, 5.47572611, 0.56203849,
 4.75290844, 2.93468955, -4.11105386, -8.46842306, -4.30976470, -4.95232123, -7.52864792,
 5.98878270, 9.26991591, -5.12145558, 8.79135995, 0.84570014, 0.76771639, -9.06987438,
 2.98019133, 4.32346902, 9.09025109, 3.41754618, 7.18958876, -4.61604685, 0.79105582,
 -3.38523672, -7.55809816, -1.25939093, -8.53611324, -6.23597832, -0.69723548, 8.20089888,
 -0.86800619, -9.59636272, 9.00050087, -4.14580543, -9.75041804, 9.58473124, 4.02200939,
 8.68806358, -5.05640834, 4.07732296, -6.29723306, -3.64499503, 3.25122571, 5.36362587,
 -5.54878393, -0.23315356, 4.77030819, 9.54593140, -8.50981656, 2.05610517, -0.97281509,
 -6.83312274, -1.80802817, -4.47947865, -1.59512646, 7.76594061, 7.65990802, 4.62872410,
 -2.68079482, -9.62774824, -7.22915854, -0.38935180, 8.44052825, 7.75091787, -5.29659690,
 -7.70381696, 4.30736252, -4.22884956, -3.72327514, 7.23968199, 6.40170654, -4.25073473,
 -1.57648347, 3.35310296, 7.32677797, -0.92796304, 0.62908170, 4.23484395, -6.10258080,
 -9.02622832, -0.59916275, -2.53694799, -3.02723766, 5.36728886, -4.46100355, 4.12527371,
 -9.05071097, 5.90016696, -5.16801291, -0.13285895, -9.20788181, -3.29693339, 2.76462634,
 -7.55516205, 3.48047179, -1.33979060, 3.66390001, 1.52274773, 0.63620741, -7.00003121,
 -0.90124169, -4.89180897, 8.22150345, 1.62427671, 8.23526331, -1.57845070, -3.02830887,
 2.67011433, -2.03096864, 6.23964360, 1.66997716, 1.48532117, 4.53087832, -1.01677993,
 8.25209680, 6.30433131, 6.65650229, 7.56311226, -4.31008483, -2.00533213, -4.67395118,
 7.63991499, 0.44701690, 0.32570955, -1.77130336, -6.79748844, -9.66189546, -7.65626317,
 8.82318416, 4.99095370, -8.82719177, 5.55672057, -0.23629297, 8.98512358, 9.11307769,
 -3.92272659, -9.53689932, 4.61234425, -3.02006114, 3.11115988, -2.52315982, -8.32598144,
 0.18275635, 2.39798015, -9.67329338, 7.87375389, -7.86505853, 9.91550822, 0.76343929,
 -6.60043276, -9.94816049, -1.72764815, 7.18168319, -9.72438665, 1.18739072, -2.34113283,
 -2.08667329, 3.01383995, 0.46655999, 7.87672913, -8.34081042, -0.57621215, 8.70431106,
 0.69967920, 9.84935022, 6.64572768, 1.21391300, 8.46027267, 7.70686406, -2.18550025,
 3.64121180, 3.08404319, -7.57378926, -3.46269122, -8.96418780, -6.70431920, 1.33606991,
 8.28167033, 9.50469093, -2.98466459, -1.53838686, 5.41288096, 6.21847965, -8.89480416,
 7.55779342, -7.72634302, -9.32496173, 9.16476646, 3.40505817, 4.88881235, 6.56456550,
 -2.67181908, -5.77583472, 0.70181972, 3.28214376, 9.01052668, -2.17205090, 3.30383762,
 -7.64114455, -2.58044350, 3.62235466, -7.11998873, 5.02555827, -9.79378504, 0.33783004,
 -1.49609658, 3.41634232, 2.62824443, 7.46320676, 5.25365916, 3.48527623, 0.74077593,
 -6.86272918, -2.67035458, 2.77406307, 3.52386913, 8.86545578, 8.46663239, -3.45234741,
 0.81647073, -4.45912727, 2.38040135, 7.53785986, 7.38672397, 0.76702120, 5.87523366,
 5.73829685, -5.08340679, -1.53662330, -2.66062460, 4.07280064, -0.93332062, 6.07806980,
 -9.60694744, -6.91373902, -6.01827327, 3.57957808, -3.42653218, -4.50407880, -8.51677652,
 6.15587075, 6.59127765, 9.82742305, -2.07121235, 6.12175338, -3.81433637, 5.93000900,
 0.07837687, -8.86915687, -9.47843571, -8.38238069, -6.82186943, 9.91988531, -1.02266044,
 -0.04552506, 5.84135463, 1.79554869, -1.75470728, 3.94564972, -4.69913147, 8.97208516,
 -2.05667277, 9.85212644, 9.98037559, -6.43253077, -7.06619454, 8.92868973, 6.81292247,
 -8.70791060, -3.42394447, 7.12153187, 2.93068277, -5.74468368, -0.47742121, 6.43848546,
 4.81030980, 9.99354051, -7.88601562, -2.44014122, 1.71006812, 1.05421454, -4.52294406,
 8.58225930, -5.37763812, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000, 0.00000000,
 0.00000000, 0.00000000, 0.00000000, 0.00000000]

import sys
import numpy as np
import matplotlib.pyplot as plt
import scipy.interpolate
from scipy.spatial import distance
np.set_printoptions(threshold=sys.maxsize)

print(distance.cdist(np.array([x,y]).T,np.array([x,y]).T))


np.array([x,y]).T

dist = distance.cdist(np.array([x,y]).T,np.array([x,y]).T)

def kth_diag_indices(a,k):
  """function for finding diagonal indices with k offset
    [from https://stackoverflow.com/questions/10925671/numpy-k-th-diagonal-indices]"""
  rows, cols = np.diag_indices_from(a)
  if k<0:
    return rows[:k], cols[-k:]
  elif k>0:
    return rows[k:], cols[:-k]
  else:
    return rows, cols
  
diag_blank_width = 24  
for k in range(-diag_blank_width,diag_blank_width+1):
  rows, cols = kth_diag_indices(dist,k)
  dist[rows,cols] = np.NaN

i1, i2 = np.where(~np.isnan(dist))
dist.ncol
